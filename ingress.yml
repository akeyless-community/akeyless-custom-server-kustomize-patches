apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: akl-custom-server-ingress
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 64k
    nginx.ingress.kubernetes.io/client-header-buffer-size: 100k
    nginx.ingress.kubernetes.io/http2-max-header-size: 96k
    nginx.ingress.kubernetes.io/large-client-header-buffers: 4 100k
    nginx.ingress.kubernetes.io/proxy-buffer-size: 8k
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx  # Assuming 'nginx' is your ingress class name
  rules:
  ## This is the domain name that will be used to access the custom server
  - host: custom1.cg.cs.akeyless.fans
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: akl-custom-server-service
            port:
              number: 2608
  tls:
  - hosts:
    - custom1.cg.cs.akeyless.fans
    secretName: custom1.cg.cs.akeyless.fans-tls